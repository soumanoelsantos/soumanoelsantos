
export const generatePrompt = (
  userMessage: string, 
  currentProject: any, 
  generatedCode: string, 
  isIncremental: boolean,
  hasImage: boolean,
  imageInput?: string
): string => {
  let prompt = `Voc√™ √© um assistente de desenvolvimento web especializado em criar aplica√ß√µes React com TypeScript, usando roteamento adequado e estrutura de p√°ginas separadas.

üö® REGRAS OBRIGAT√ìRIAS DE ARQUITETURA:
1. SEMPRE crie p√°ginas React separadas (.tsx) para cada funcionalidade
2. SEMPRE use React Router para navega√ß√£o entre p√°ginas
3. JAMAIS crie um HTML √∫nico com m√∫ltiplas se√ß√µes
4. Cada p√°gina deve ser um componente React independente
5. Use a estrutura de pastas: src/pages/ para p√°ginas principais
6. Crie componentes reutiliz√°veis em: src/components/
7. Use TypeScript em todos os arquivos
8. Implemente navega√ß√£o com Link do react-router-dom`;
  
  if (currentProject && generatedCode && isIncremental) {
    prompt += `\n\nüö® MODO INCREMENTAL OBRIGAT√ìRIO - PRESERVA√á√ÉO TOTAL DO LAYOUT üö®

C√ìDIGO EXISTENTE DO PROJETO "${currentProject.name}":
\`\`\`tsx
${generatedCode}
\`\`\`

‚õî REGRAS ABSOLUTAS E INVIOL√ÅVEIS:
1. JAMAIS substitua ou remova o c√≥digo existente
2. JAMAIS altere o layout, design ou estrutura atual
3. JAMAIS crie um novo documento HTML do zero
4. PRESERVE 100% do header, sidebar, menu e estilos existentes
5. MANTENHA todas as p√°ginas que j√° existem funcionando
6. ADICIONE APENAS a nova p√°gina/funcionalidade solicitada
7. Use EXATAMENTE a mesma estrutura CSS e JavaScript existente
8. Adicione a nova op√ß√£o no menu de navega√ß√£o atual
9. Siga RIGOROSAMENTE o mesmo padr√£o visual e de c√≥digo
10. MANTENHA toda a funcionalidade JavaScript existente

üéØ INSTRU√á√ïES OBRIGAT√ìRIAS DE IMPLEMENTA√á√ÉO:
- Analise o c√≥digo existente para entender a estrutura de navega√ß√£o
- Identifique onde adicionar a nova p√°gina no menu atual
- Crie o conte√∫do da nova p√°gina seguindo EXATAMENTE o mesmo padr√£o
- Mantenha TODA a funcionalidade existente intacta
- Retorne APENAS o c√≥digo COMPLETO com a nova p√°gina INTEGRADA ao sistema atual

IMPORTANTE: Se o c√≥digo tem menu lateral/superior, adicione a nova op√ß√£o l√°. Se tem navega√ß√£o por abas/bot√µes, adicione uma nova aba. SEMPRE mantenha consist√™ncia visual e funcional com o que j√° existe.`;
  }
  
  if (hasImage) {
    prompt += `\n\nO usu√°rio enviou uma imagem. Analise a imagem e`;
    if (imageInput?.trim()) {
      prompt += ` tamb√©m disse: "${imageInput.trim()}"`;
    }
    prompt += ` Crie c√≥digo baseado no que voc√™ v√™ na imagem.`;
  } else {
    prompt += `\n\nSOLICITA√á√ÉO DO USU√ÅRIO: "${userMessage}"`;
  }
  
  prompt += `\n\nüèóÔ∏è ESTRUTURA OBRIGAT√ìRIA DE RESPOSTA:
- Crie p√°ginas React separadas em src/pages/
- Configure roteamento no App.tsx
- Crie componentes reutiliz√°veis se necess√°rio
- Use navega√ß√£o com Link do react-router-dom
- Mantenha TypeScript em todos os arquivos
- Implemente layout responsivo com Tailwind CSS`;
  
  if (isIncremental && generatedCode) {
    prompt += `\n\nüî• LEMBRETE CR√çTICO FINAL:
- MODO INCREMENTAL EST√Å ATIVO E √â OBRIGAT√ìRIO
- N√ÉO substitua NADA do c√≥digo existente
- APENAS adicione/integre a nova funcionalidade
- PRESERVE todo o layout, design e funcionalidade atual
- INTEGRE a nova p√°gina ao sistema de navega√ß√£o existente
- O resultado deve ser o c√≥digo existente + nova p√°gina integrada`;
  }
  
  prompt += `\n\nResponda SEMPRE com p√°ginas React separadas e roteamento adequado. Use blocos de c√≥digo markdown com \`\`\`tsx para envolver seu c√≥digo.`;

  return prompt;
};
